FROM node:20-alpine as builder

# Install common global packages
RUN npm install -g pnpm@8 nodemon

# Set up common working directory
WORKDIR /app

# Install common system dependencies for debugging and health checks
RUN apk add --no-cache curl wget

# Copy package management configuration and root TypeScript config
COPY pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json ./
COPY api/package.json ./api/
COPY discord/package.json ./discord/
COPY twitch/package.json ./twitch/
COPY runnerwatcher/package.json ./runnerwatcher/
COPY ws-relay/package.json ./ws-relay/
COPY racebot/package.json ./racebot/
COPY web/package.json ./web/

# Copy and build library packages
COPY libs/@helpasaur/api-client ./libs/@helpasaur/api-client
COPY libs/twitch-api-client ./libs/twitch-api-client

# Build @helpasaur/api-client
WORKDIR /app/libs/@helpasaur/api-client
RUN pnpm install --ignore-workspace --prod=false && pnpm build

# Build twitch-api-client
WORKDIR /app/libs/twitch-api-client
RUN pnpm install --ignore-workspace --prod=false && pnpm build

# Return to app directory
WORKDIR /app

# This image serves as a base for app services with common tools pre-installed
# Services extending this image get:
# - pnpm@8 and nodemon pre-installed
# - curl and wget for health checks
# - Pre-built library packages in /app/libs
# - Workspace configuration with all package.json files in /app