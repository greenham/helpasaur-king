services:
  # Production-specific configurations
  mongo:
    volumes:
      - ./docker-entrypoint-initdb.d/db-init.prod.js:/docker-entrypoint-initdb.d/db-init.prod.js:ro

  nginx:
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/letsencrypt/live/api.helpasaur.com/fullchain.pem:/etc/nginx/certs/api.helpasaur.com/fullchain.pem
      - /etc/letsencrypt/live/api.helpasaur.com/privkey.pem:/etc/nginx/certs/api.helpasaur.com/privkey.pem
      - /etc/letsencrypt/live/rw.helpasaur.com/fullchain.pem:/etc/nginx/certs/rw.helpasaur.com/fullchain.pem
      - /etc/letsencrypt/live/rw.helpasaur.com/privkey.pem:/etc/nginx/certs/rw.helpasaur.com/privkey.pem
      - /etc/letsencrypt/live/status.helpasaur.com/fullchain.pem:/etc/nginx/certs/status.helpasaur.com/fullchain.pem
      - /etc/letsencrypt/live/status.helpasaur.com/privkey.pem:/etc/nginx/certs/status.helpasaur.com/privkey.pem
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf

  ws-relay:
    networks:
      - int
  
  # Monitoring dashboard
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    ports:
      - 3013:3001  # Internal port 3001, exposed on 3013 to avoid conflicts
    volumes:
      - uptime-kuma_data:/app/data
    networks:
      - ext
      - int
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "node", "extra/healthcheck"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 180s

volumes:
  uptime-kuma_data:
