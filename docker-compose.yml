version: "3.8"

services:
  mongo:
    image: mongo:latest
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_NAME}
    ports:
      - ${MONGO_EXTERNAL_PORT}:27017
    volumes:
      - ./docker-entrypoint-initdb.d/db-init.js:/docker-entrypoint-initdb.d/db-init.js:ro
      - mongodb_data_container:/data/db
    networks:
      - int

  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_EXTERNAL_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    networks:
      - int
      - ext

  api-server:
    image: helpa-api:${TARGET}
    build:
      context: ./api
      target: ${TARGET}
    volumes:
      - ./api/src:/app/src
    restart: on-failure
    ports:
      - ${API_SERVER_EXTERNAL_PORT}:3001
    environment:
      MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_EXTERNAL_PORT}/${MONGO_DATABASE_NAME}?authSource=admin
      PORT: ${API_SERVER_EXTERNAL_PORT}
      API_KEY: ${API_SECRET_KEY}
      TWITCH_EVENTSUB_SECRET_KEY: ${TWITCH_EVENTSUB_SECRET_KEY}
      TWITCH_EVENTSUB_WEBHOOK_URL: ${TWITCH_EVENTSUB_WEBHOOK_URL}
    depends_on:
      - mongo
    networks:
      - int
      - ext

  discord-bot:
    image: helpa-discord:${TARGET}
    build:
      context: ./discord
      target: ${TARGET}
    volumes:
      - ./discord/src:/app/src
    restart: on-failure
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
      API_KEY: ${API_SECRET_KEY}
      WEBSOCKET_RELAY_SERVER: http://ws-relay:${WEBSOCKET_RELAY_SERVER_PORT}
    depends_on:
      - api-server
    networks:
      - int
      - ext

  twitch-bot:
    image: helpa-twitch:${TARGET}
    build:
      context: ./twitch
      target: ${TARGET}
    volumes:
      - ./twitch:/src
    restart: on-failure
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
      API_KEY: ${API_SECRET_KEY}
    depends_on:
      - api-server
    networks:
      - int
      - ext

  web:
    image: helpa-web:${TARGET}
    build:
      context: ./web
      target: ${TARGET}
      args:
        API_URL: ${API_URL}
    volumes:
      - ./web/src:/app/src
    restart: on-failure
    ports:
      - ${WEB_PUBLIC_EXTERNAL_PORT}:3000
    depends_on:
      - api-server
    networks:
      - int
      - ext

  nginx:
    image: nginx:1.21.6
    restart: always
    ports:
      - 8888:80
    environment:
      - WEB_PUBLIC_EXTERNAL_PORT
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/static:/srv/static
    depends_on:
      - web
    networks:
      - int
      - ext

  runnerwatcher:
    image: helpa-runnerwatcher:${TARGET}
    build:
      context: ./runnerwatcher
      target: ${TARGET}
    volumes:
      - ./runnerwatcher:/src
    restart: on-failure
    ports:
      - ${TWITCH_WEBHOOK_LISTENER_PORT}:3002
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
      API_KEY: ${API_SECRET_KEY}
      TWITCH_EVENTSUB_SECRET_KEY: ${TWITCH_EVENTSUB_SECRET_KEY}
      TWITCH_EVENTSUB_WEBHOOK_URL: ${TWITCH_EVENTSUB_WEBHOOK_URL}
      TWITCH_WEBHOOK_LISTENER_PORT: ${TWITCH_WEBHOOK_LISTENER_PORT}
      WEBSOCKET_RELAY_SERVER: http://ws-relay:${WEBSOCKET_RELAY_SERVER_PORT}
    depends_on:
      - api-server
    networks:
      - int
      - ext

  racebot:
    image: helpa-racebot:${TARGET}
    build:
      context: ./racebot
      target: ${TARGET}
    volumes:
      - ./racebot/src:/app/src
    restart: on-failure
    environment:
      WEBSOCKET_RELAY_SERVER: http://ws-relay:${WEBSOCKET_RELAY_SERVER_PORT}
      RACETIME_BASE_URL: ${RACETIME_BASE_URL}
      RACETIME_HOSTNAME: ${RACETIME_HOSTNAME}
      RACETIME_WSS_URL: ${RACETIME_WSS_URL}
      RACETIME_GAME_CATEGORY_SLUG_Z3: ${RACETIME_GAME_CATEGORY_SLUG_Z3}
      RACETIME_BOT_CLIENT_ID: ${RACETIME_BOT_CLIENT_ID}
      RACETIME_BOT_CLIENT_SECRET: ${RACETIME_BOT_CLIENT_SECRET}
    networks:
      - int
      - ext

  ws-relay:
    image: helpa-ws-relay:${TARGET}
    build:
      context: ./ws-relay
      target: ${TARGET}
    volumes:
      - ./ws-relay:/src
    restart: on-failure
    ports:
      - ${WEBSOCKET_RELAY_SERVER_PORT}:${WEBSOCKET_RELAY_SERVER_PORT}
    environment:
      WEBSOCKET_RELAY_SERVER_PORT: ${WEBSOCKET_RELAY_SERVER_PORT}
    networks:
      - int
      - ext

volumes:
  mongodb_data_container:

networks:
  ext:
    driver: bridge
  int:
    driver: bridge
    internal: true
