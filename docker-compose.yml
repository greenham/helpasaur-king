version: "3.8"

services:
  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: helpa
    ports:
      - 27017:27017
    volumes:
      - ./docker-entrypoint-initdb.d/db-init.js:/docker-entrypoint-initdb.d/db-init.js:ro
      - mongodb_data_container:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongo:27017
    depends_on:
      - mongo

  api-server:
    build:
      context: ./api
      target: dev
    volumes:
      - ./api:/src
    restart: always
    command: yarn start
    ports:
      - 3000:3000
    environment:
      MONGODB_URL: mongodb://root:rootpassword@mongo:27017/helpa?authSource=admin
    depends_on:
      - mongo

  discord-bot:
    build:
      context: ./discord
      target: dev
    volumes:
      - ./discord:/src
    restart: always
    command: yarn start:dev
    environment:
      API_URL: http://api-server:3000/api
    depends_on:
      - api-server

  twitch-bot:
    build:
      context: ./twitch
      target: dev
    volumes:
      - ./twitch:/src
    restart: always
    command: yarn start
    environment:
      API_URL: http://api-server:3000/api
    depends_on:
      - api-server

  web-public:
    build:
      context: ./web
      target: dev
    volumes:
      - ./web:/src
    restart: always
    command: yarn start
    ports:
      - 3001:3001
    environment:
      API_URL: http://api-server:3000/api
    depends_on:
      - api-server

volumes:
  mongodb_data_container:
