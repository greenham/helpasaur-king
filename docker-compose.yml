version: "3.8"

services:
  mongo:
    image: mongo:latest
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_NAME}
    ports:
      - ${MONGO_EXTERNAL_PORT}:27017
    volumes:
      - ./docker-entrypoint-initdb.d/db-init.js:/docker-entrypoint-initdb.d/db-init.js:ro
      - mongodb_data_container:/data/db
    networks:
      - int

  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_EXTERNAL_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    networks:
      - int
      - ext

  api-server:
    build:
      context: ./api
      target: ${TARGET}
    volumes:
      - ./api:/src
    restart: on-failure
    ports:
      - ${API_SERVER_EXTERNAL_PORT}:3001
    environment:
      MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_EXTERNAL_PORT}/${MONGO_DATABASE_NAME}?authSource=admin
      PORT: ${API_SERVER_EXTERNAL_PORT}
    depends_on:
      - mongo
    networks:
      - int
      - ext

  discord-bot:
    build:
      context: ./discord
      target: ${TARGET}
    volumes:
      - ./discord:/src
    restart: on-failure
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
    depends_on:
      - api-server
    networks:
      - int
      - ext

  twitch-bot:
    build:
      context: ./twitch
      target: ${TARGET}
    volumes:
      - ./twitch:/src
    restart: on-failure
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
    depends_on:
      - api-server
    networks:
      - int
      - ext

  web-public:
    build:
      context: ./web
      target: ${TARGET}
    volumes:
      - ./web:/src
    restart: on-failure
    ports:
      - ${WEB_PUBLIC_EXTERNAL_PORT}:3000
    environment:
      API_URL: http://api-server:${API_SERVER_EXTERNAL_PORT}/api
      PORT: ${WEB_PUBLIC_EXTERNAL_PORT}
    depends_on:
      - api-server
    networks:
      - int

  nginx:
    build:
      context: ./nginx
      target: ${TARGET}
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      - WEB_PUBLIC_EXTERNAL_PORT
    depends_on:
      - web-public
    networks:
      - int
      - ext

volumes:
  mongodb_data_container:

networks:
  ext:
    driver: bridge
  int:
    driver: bridge
    internal: true
