name: Build and Push Images

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      custom_tag:
        description: "Optional custom tag to apply to all images (e.g., 1.9.1, test, beta)"
        required: false
        default: ""
        type: string

env:
  REGISTRY: ghcr.io/greenham/helpasaur-king

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build metadata
        id: metadata
        run: |
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.custom_tag }}"
            if [ -z "$VERSION" ]; then
              echo "No custom_tag provided, using git commit hash"
              VERSION="${{ steps.metadata.outputs.GIT_COMMIT }}"
            fi
          else
            VERSION="${{ steps.metadata.outputs.GIT_COMMIT }}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build and push all images
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          GIT_COMMIT: ${{ steps.metadata.outputs.GIT_COMMIT }}
          BUILD_DATE: ${{ steps.metadata.outputs.BUILD_DATE }}
          DOCKER_BUILDKIT: 1
        run: |
          docker compose -f docker-compose.build.prod.yml build --push
