name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Image tag to deploy - must exist in ghcr.io (e.g., 1.9.1, latest)"
        required: true
        default: "latest"
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker-compose.yml
            docker-compose.ghcr.yml
            docker-compose.prod.yml
            docker-compose.monitoring.yml
            nginx/
            scripts/

      - name: Copy files to production server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "docker-compose.yml,docker-compose.ghcr.yml,docker-compose.prod.yml,docker-compose.monitoring.yml,nginx/,scripts/"
          target: "${{ secrets.DEPLOY_PATH }}"
          overwrite: true
          rm: false

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}

            # Deploy the application with the specified version
            VERSION="${{ github.event.inputs.version }}"
            echo "Deploying version: $VERSION"
            bash ./scripts/deploy.sh "$VERSION"
            
            # Ensure monitoring stack is running
            echo "Checking monitoring stack..."
            bash ./scripts/monitoring.sh status || bash ./scripts/monitoring.sh start

            # Clean up old Docker images
            bash ./scripts/cleanup.sh 3

  deploy-web:
    needs: deploy  # Wait for backend deployment to complete successfully
    uses: ./.github/workflows/deploy-gh-pages.yml
    with:
      custom_domain: helpasaur.com
    secrets: inherit
