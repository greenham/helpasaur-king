name: Deploy to DigitalOcean

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /srv/helpa
            git pull
            # Extract version from release tag for image tagging
            export VERSION="${{ github.event.release.tag_name }}"
            export VERSION="${VERSION#v}"  # Remove 'v' prefix if present
            echo "Deploying version: $VERSION"
            # Build with version tag
            yarn build helpa-base && BUILD_TARGET=prod VERSION=$VERSION yarn build
            # Start with version-tagged images
            BUILD_TARGET=prod VERSION=$VERSION yarn start:prod
            
  update-changelog-and-version:
    needs: deploy
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Update version in package.json
        run: |
          # Extract version from release tag (removes 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          
          # Update root package.json
          npm version "$VERSION" --no-git-tag-version --allow-same-version
          
          echo "Updated version to $VERSION"
          
      - name: Update CHANGELOG.md
        run: |
          # Extract version and release notes
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          RELEASE_NOTES="${{ github.event.release.body }}"
          RELEASE_DATE=$(date +%Y-%m-%d)
          
          # Process release notes to demote headers by one level (## -> ###, ### -> ####, etc.)
          # This ensures GitHub's auto-generated "## What's Changed" becomes "### What's Changed"
          PROCESSED_NOTES=$(echo "$RELEASE_NOTES" | sed 's/^##/#&/g')
          
          # Create temporary file with new changelog entry
          echo "# Changelog" > CHANGELOG.tmp.md
          echo "" >> CHANGELOG.tmp.md
          echo "## $VERSION" >> CHANGELOG.tmp.md
          echo "" >> CHANGELOG.tmp.md
          echo "_${RELEASE_DATE}_" >> CHANGELOG.tmp.md
          echo "" >> CHANGELOG.tmp.md
          echo "$PROCESSED_NOTES" >> CHANGELOG.tmp.md
          echo "" >> CHANGELOG.tmp.md
          
          # Append existing changelog content (skip the first two lines - title and empty line)
          tail -n +3 CHANGELOG.md >> CHANGELOG.tmp.md
          
          # Replace the original file
          mv CHANGELOG.tmp.md CHANGELOG.md
          
          echo "Updated CHANGELOG.md with version $VERSION"
          
      - name: Commit and push changes
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          
          git add package.json CHANGELOG.md
          git commit -m "chore: update version to $VERSION and changelog [skip ci]" || echo "No changes to commit"
          git push origin main
